/*
 * This file is generated by jOOQ.
 */
package com.mm.task06.db.tables;


import com.mm.platform.jooq.datatype.CryptStringConverter;
import com.mm.platform.jooq.datatype.LocalDateTimeConverter;
import com.mm.task06.db.IdfOnboarding;
import com.mm.task06.db.Keys;
import com.mm.task06.db.tables.records.AudUserAccountRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row9;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.13.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AudUserAccount extends TableImpl<AudUserAccountRecord> {

    private static final long serialVersionUID = -886528711;

    /**
     * The reference instance of <code>idf_onboarding.aud_user_account</code>
     */
    public static final AudUserAccount AUD_USER_ACCOUNT = new AudUserAccount();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AudUserAccountRecord> getRecordType() {
        return AudUserAccountRecord.class;
    }

    /**
     * The column <code>idf_onboarding.aud_user_account.id</code>.
     */
    public final TableField<AudUserAccountRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>idf_onboarding.aud_user_account.date_created</code>.
     */
    public final TableField<AudUserAccountRecord, LocalDateTime> DATE_CREATED = createField(DSL.name("date_created"), org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "", new LocalDateTimeConverter());

    /**
     * The column <code>idf_onboarding.aud_user_account.email</code>.
     */
    public final TableField<AudUserAccountRecord, String> EMAIL = createField(DSL.name("email"), org.jooq.impl.SQLDataType.VARCHAR(256), this, "");

    /**
     * The column <code>idf_onboarding.aud_user_account.name</code>.
     */
    public final TableField<AudUserAccountRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(256), this, "");

    /**
     * The column <code>idf_onboarding.aud_user_account.mobile_phone</code>.
     */
    public final TableField<AudUserAccountRecord, String> MOBILE_PHONE = createField(DSL.name("mobile_phone"), org.jooq.impl.SQLDataType.VARCHAR(64), this, "", new CryptStringConverter());

    /**
     * The column <code>idf_onboarding.aud_user_account.REV</code>.
     */
    public final TableField<AudUserAccountRecord, Integer> REV = createField(DSL.name("REV"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>idf_onboarding.aud_user_account.REVTYPE</code>.
     */
    public final TableField<AudUserAccountRecord, Byte> REVTYPE = createField(DSL.name("REVTYPE"), org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>idf_onboarding.aud_user_account.REVEND</code>.
     */
    public final TableField<AudUserAccountRecord, Integer> REVEND = createField(DSL.name("REVEND"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>idf_onboarding.aud_user_account.id_primary</code>.
     */
    public final TableField<AudUserAccountRecord, Long> ID_PRIMARY = createField(DSL.name("id_primary"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * Create a <code>idf_onboarding.aud_user_account</code> table reference
     */
    public AudUserAccount() {
        this(DSL.name("aud_user_account"), null);
    }

    /**
     * Create an aliased <code>idf_onboarding.aud_user_account</code> table reference
     */
    public AudUserAccount(String alias) {
        this(DSL.name(alias), AUD_USER_ACCOUNT);
    }

    /**
     * Create an aliased <code>idf_onboarding.aud_user_account</code> table reference
     */
    public AudUserAccount(Name alias) {
        this(alias, AUD_USER_ACCOUNT);
    }

    private AudUserAccount(Name alias, Table<AudUserAccountRecord> aliased) {
        this(alias, aliased, null);
    }

    private AudUserAccount(Name alias, Table<AudUserAccountRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> AudUserAccount(Table<O> child, ForeignKey<O, AudUserAccountRecord> key) {
        super(child, key, AUD_USER_ACCOUNT);
    }

    @Override
    public Schema getSchema() {
        return IdfOnboarding.IDF_ONBOARDING;
    }

    @Override
    public Identity<AudUserAccountRecord, Long> getIdentity() {
        return Keys.IDENTITY_AUD_USER_ACCOUNT;
    }

    @Override
    public UniqueKey<AudUserAccountRecord> getPrimaryKey() {
        return Keys.KEY_AUD_USER_ACCOUNT_PRIMARY;
    }

    @Override
    public List<UniqueKey<AudUserAccountRecord>> getKeys() {
        return Arrays.<UniqueKey<AudUserAccountRecord>>asList(Keys.KEY_AUD_USER_ACCOUNT_PRIMARY);
    }

    @Override
    public List<ForeignKey<AudUserAccountRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<AudUserAccountRecord, ?>>asList(Keys.FK_AUD_USER_ACCOUNT_REV_AUD_ID, Keys.FK_AUD_USER_ACCOUNT_REVEND_AUD_ID);
    }

    public Aud fkAudUserAccountRevAudId() {
        return new Aud(this, Keys.FK_AUD_USER_ACCOUNT_REV_AUD_ID);
    }

    public Aud fkAudUserAccountRevendAudId() {
        return new Aud(this, Keys.FK_AUD_USER_ACCOUNT_REVEND_AUD_ID);
    }

    @Override
    public AudUserAccount as(String alias) {
        return new AudUserAccount(DSL.name(alias), this);
    }

    @Override
    public AudUserAccount as(Name alias) {
        return new AudUserAccount(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AudUserAccount rename(String name) {
        return new AudUserAccount(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AudUserAccount rename(Name name) {
        return new AudUserAccount(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row9<Long, LocalDateTime, String, String, String, Integer, Byte, Integer, Long> fieldsRow() {
        return (Row9) super.fieldsRow();
    }
}
