/*
 * This file is generated by jOOQ.
 */
package com.mm.task06.db.tables.records;


import com.mm.task06.db.tables.PersonalData;
import com.mm.types.MaritalStatus;

import java.sql.Date;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.13.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PersonalDataRecord extends UpdatableRecordImpl<PersonalDataRecord> implements Record6<Long, Date, String, String, String, MaritalStatus> {

    private static final long serialVersionUID = 1098497651;

    /**
     * Setter for <code>idf_onboarding.personal_data.id</code>.
     */
    public PersonalDataRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>idf_onboarding.personal_data.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>idf_onboarding.personal_data.birthday</code>.
     */
    public PersonalDataRecord setBirthday(Date value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>idf_onboarding.personal_data.birthday</code>.
     */
    public Date getBirthday() {
        return (Date) get(1);
    }

    /**
     * Setter for <code>idf_onboarding.personal_data.first_name</code>.
     */
    public PersonalDataRecord setFirstName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>idf_onboarding.personal_data.first_name</code>.
     */
    public String getFirstName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>idf_onboarding.personal_data.last_name</code>.
     */
    public PersonalDataRecord setLastName(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>idf_onboarding.personal_data.last_name</code>.
     */
    public String getLastName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>idf_onboarding.personal_data.birthplace</code>.
     */
    public PersonalDataRecord setBirthplace(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>idf_onboarding.personal_data.birthplace</code>.
     */
    public String getBirthplace() {
        return (String) get(4);
    }

    /**
     * Setter for <code>idf_onboarding.personal_data.maritalStatus</code>.
     */
    public PersonalDataRecord setMaritalstatus(MaritalStatus value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>idf_onboarding.personal_data.maritalStatus</code>.
     */
    public MaritalStatus getMaritalstatus() {
        return (MaritalStatus) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, Date, String, String, String, MaritalStatus> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Long, Date, String, String, String, MaritalStatus> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return PersonalData.PERSONAL_DATA.ID;
    }

    @Override
    public Field<Date> field2() {
        return PersonalData.PERSONAL_DATA.BIRTHDAY;
    }

    @Override
    public Field<String> field3() {
        return PersonalData.PERSONAL_DATA.FIRST_NAME;
    }

    @Override
    public Field<String> field4() {
        return PersonalData.PERSONAL_DATA.LAST_NAME;
    }

    @Override
    public Field<String> field5() {
        return PersonalData.PERSONAL_DATA.BIRTHPLACE;
    }

    @Override
    public Field<MaritalStatus> field6() {
        return PersonalData.PERSONAL_DATA.MARITALSTATUS;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Date component2() {
        return getBirthday();
    }

    @Override
    public String component3() {
        return getFirstName();
    }

    @Override
    public String component4() {
        return getLastName();
    }

    @Override
    public String component5() {
        return getBirthplace();
    }

    @Override
    public MaritalStatus component6() {
        return getMaritalstatus();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Date value2() {
        return getBirthday();
    }

    @Override
    public String value3() {
        return getFirstName();
    }

    @Override
    public String value4() {
        return getLastName();
    }

    @Override
    public String value5() {
        return getBirthplace();
    }

    @Override
    public MaritalStatus value6() {
        return getMaritalstatus();
    }

    @Override
    public PersonalDataRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public PersonalDataRecord value2(Date value) {
        setBirthday(value);
        return this;
    }

    @Override
    public PersonalDataRecord value3(String value) {
        setFirstName(value);
        return this;
    }

    @Override
    public PersonalDataRecord value4(String value) {
        setLastName(value);
        return this;
    }

    @Override
    public PersonalDataRecord value5(String value) {
        setBirthplace(value);
        return this;
    }

    @Override
    public PersonalDataRecord value6(MaritalStatus value) {
        setMaritalstatus(value);
        return this;
    }

    @Override
    public PersonalDataRecord values(Long value1, Date value2, String value3, String value4, String value5, MaritalStatus value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PersonalDataRecord
     */
    public PersonalDataRecord() {
        super(PersonalData.PERSONAL_DATA);
    }

    /**
     * Create a detached, initialised PersonalDataRecord
     */
    public PersonalDataRecord(Long id, Date birthday, String firstName, String lastName, String birthplace, MaritalStatus maritalstatus) {
        super(PersonalData.PERSONAL_DATA);

        set(0, id);
        set(1, birthday);
        set(2, firstName);
        set(3, lastName);
        set(4, birthplace);
        set(5, maritalstatus);
    }

    private Long updatedBy;
    
    public Long getUpdatedBy() {
        return updatedBy;
    }
    
    public void setUpdatedBy(Long updatedBy) {
        this.updatedBy = updatedBy;
    }
}
