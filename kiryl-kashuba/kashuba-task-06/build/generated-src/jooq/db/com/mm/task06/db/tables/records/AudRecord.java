/*
 * This file is generated by jOOQ.
 */
package com.mm.task06.db.tables.records;


import com.mm.task06.db.tables.Aud;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.13.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AudRecord extends UpdatableRecordImpl<AudRecord> implements Record3<Integer, Long, Long> {

    private static final long serialVersionUID = -230184437;

    /**
     * Setter for <code>idf_onboarding.aud.id</code>.
     */
    public AudRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>idf_onboarding.aud.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>idf_onboarding.aud.timestamp</code>.
     */
    public AudRecord setTimestamp(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>idf_onboarding.aud.timestamp</code>.
     */
    public Long getTimestamp() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>idf_onboarding.aud.user_id</code>.
     */
    public AudRecord setUserId(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>idf_onboarding.aud.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, Long, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, Long, Long> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Aud.AUD.ID;
    }

    @Override
    public Field<Long> field2() {
        return Aud.AUD.TIMESTAMP;
    }

    @Override
    public Field<Long> field3() {
        return Aud.AUD.USER_ID;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getTimestamp();
    }

    @Override
    public Long component3() {
        return getUserId();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getTimestamp();
    }

    @Override
    public Long value3() {
        return getUserId();
    }

    @Override
    public AudRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public AudRecord value2(Long value) {
        setTimestamp(value);
        return this;
    }

    @Override
    public AudRecord value3(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public AudRecord values(Integer value1, Long value2, Long value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AudRecord
     */
    public AudRecord() {
        super(Aud.AUD);
    }

    /**
     * Create a detached, initialised AudRecord
     */
    public AudRecord(Integer id, Long timestamp, Long userId) {
        super(Aud.AUD);

        set(0, id);
        set(1, timestamp);
        set(2, userId);
    }

    private Long updatedBy;
    
    public Long getUpdatedBy() {
        return updatedBy;
    }
    
    public void setUpdatedBy(Long updatedBy) {
        this.updatedBy = updatedBy;
    }
}
