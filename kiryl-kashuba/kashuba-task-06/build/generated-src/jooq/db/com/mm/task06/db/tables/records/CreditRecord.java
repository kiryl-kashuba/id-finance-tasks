/*
 * This file is generated by jOOQ.
 */
package com.mm.task06.db.tables.records;


import com.mm.task06.db.tables.Credit;
import com.mm.types.CreditStatus;

import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.13.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CreditRecord extends UpdatableRecordImpl<CreditRecord> implements Record8<Long, Double, Integer, LocalDateTime, Double, Double, CreditStatus, Long> {

    private static final long serialVersionUID = 1698664352;

    /**
     * Setter for <code>idf_onboarding.credit.id</code>.
     */
    public CreditRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>idf_onboarding.credit.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>idf_onboarding.credit.amount_to_pay</code>.
     */
    public CreditRecord setAmountToPay(Double value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>idf_onboarding.credit.amount_to_pay</code>.
     */
    public Double getAmountToPay() {
        return (Double) get(1);
    }

    /**
     * Setter for <code>idf_onboarding.credit.credit_count_days</code>.
     */
    public CreditRecord setCreditCountDays(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>idf_onboarding.credit.credit_count_days</code>.
     */
    public Integer getCreditCountDays() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>idf_onboarding.credit.date_requested</code>.
     */
    public CreditRecord setDateRequested(LocalDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>idf_onboarding.credit.date_requested</code>.
     */
    public LocalDateTime getDateRequested() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>idf_onboarding.credit.initial_amount</code>.
     */
    public CreditRecord setInitialAmount(Double value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>idf_onboarding.credit.initial_amount</code>.
     */
    public Double getInitialAmount() {
        return (Double) get(4);
    }

    /**
     * Setter for <code>idf_onboarding.credit.percent_per_day</code>.
     */
    public CreditRecord setPercentPerDay(Double value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>idf_onboarding.credit.percent_per_day</code>.
     */
    public Double getPercentPerDay() {
        return (Double) get(5);
    }

    /**
     * Setter for <code>idf_onboarding.credit.status</code>.
     */
    public CreditRecord setStatus(CreditStatus value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>idf_onboarding.credit.status</code>.
     */
    public CreditStatus getStatus() {
        return (CreditStatus) get(6);
    }

    /**
     * Setter for <code>idf_onboarding.credit.borrower_id</code>.
     */
    public CreditRecord setBorrowerId(Long value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>idf_onboarding.credit.borrower_id</code>.
     */
    public Long getBorrowerId() {
        return (Long) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, Double, Integer, LocalDateTime, Double, Double, CreditStatus, Long> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Long, Double, Integer, LocalDateTime, Double, Double, CreditStatus, Long> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Credit.CREDIT.ID;
    }

    @Override
    public Field<Double> field2() {
        return Credit.CREDIT.AMOUNT_TO_PAY;
    }

    @Override
    public Field<Integer> field3() {
        return Credit.CREDIT.CREDIT_COUNT_DAYS;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return Credit.CREDIT.DATE_REQUESTED;
    }

    @Override
    public Field<Double> field5() {
        return Credit.CREDIT.INITIAL_AMOUNT;
    }

    @Override
    public Field<Double> field6() {
        return Credit.CREDIT.PERCENT_PER_DAY;
    }

    @Override
    public Field<CreditStatus> field7() {
        return Credit.CREDIT.STATUS;
    }

    @Override
    public Field<Long> field8() {
        return Credit.CREDIT.BORROWER_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Double component2() {
        return getAmountToPay();
    }

    @Override
    public Integer component3() {
        return getCreditCountDays();
    }

    @Override
    public LocalDateTime component4() {
        return getDateRequested();
    }

    @Override
    public Double component5() {
        return getInitialAmount();
    }

    @Override
    public Double component6() {
        return getPercentPerDay();
    }

    @Override
    public CreditStatus component7() {
        return getStatus();
    }

    @Override
    public Long component8() {
        return getBorrowerId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Double value2() {
        return getAmountToPay();
    }

    @Override
    public Integer value3() {
        return getCreditCountDays();
    }

    @Override
    public LocalDateTime value4() {
        return getDateRequested();
    }

    @Override
    public Double value5() {
        return getInitialAmount();
    }

    @Override
    public Double value6() {
        return getPercentPerDay();
    }

    @Override
    public CreditStatus value7() {
        return getStatus();
    }

    @Override
    public Long value8() {
        return getBorrowerId();
    }

    @Override
    public CreditRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public CreditRecord value2(Double value) {
        setAmountToPay(value);
        return this;
    }

    @Override
    public CreditRecord value3(Integer value) {
        setCreditCountDays(value);
        return this;
    }

    @Override
    public CreditRecord value4(LocalDateTime value) {
        setDateRequested(value);
        return this;
    }

    @Override
    public CreditRecord value5(Double value) {
        setInitialAmount(value);
        return this;
    }

    @Override
    public CreditRecord value6(Double value) {
        setPercentPerDay(value);
        return this;
    }

    @Override
    public CreditRecord value7(CreditStatus value) {
        setStatus(value);
        return this;
    }

    @Override
    public CreditRecord value8(Long value) {
        setBorrowerId(value);
        return this;
    }

    @Override
    public CreditRecord values(Long value1, Double value2, Integer value3, LocalDateTime value4, Double value5, Double value6, CreditStatus value7, Long value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CreditRecord
     */
    public CreditRecord() {
        super(Credit.CREDIT);
    }

    /**
     * Create a detached, initialised CreditRecord
     */
    public CreditRecord(Long id, Double amountToPay, Integer creditCountDays, LocalDateTime dateRequested, Double initialAmount, Double percentPerDay, CreditStatus status, Long borrowerId) {
        super(Credit.CREDIT);

        set(0, id);
        set(1, amountToPay);
        set(2, creditCountDays);
        set(3, dateRequested);
        set(4, initialAmount);
        set(5, percentPerDay);
        set(6, status);
        set(7, borrowerId);
    }

    private Long updatedBy;
    
    public Long getUpdatedBy() {
        return updatedBy;
    }
    
    public void setUpdatedBy(Long updatedBy) {
        this.updatedBy = updatedBy;
    }
}
