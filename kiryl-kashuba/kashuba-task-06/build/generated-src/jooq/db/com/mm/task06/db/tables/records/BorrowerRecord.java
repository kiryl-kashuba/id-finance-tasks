/*
 * This file is generated by jOOQ.
 */
package com.mm.task06.db.tables.records;


import com.mm.task06.db.tables.Borrower;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.13.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BorrowerRecord extends UpdatableRecordImpl<BorrowerRecord> implements Record4<Long, Long, Long, Long> {

    private static final long serialVersionUID = -1657937578;

    /**
     * Setter for <code>idf_onboarding.borrower.id</code>.
     */
    public BorrowerRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>idf_onboarding.borrower.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>idf_onboarding.borrower.personal_data_id</code>.
     */
    public BorrowerRecord setPersonalDataId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>idf_onboarding.borrower.personal_data_id</code>.
     */
    public Long getPersonalDataId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>idf_onboarding.borrower.user_account_id</code>.
     */
    public BorrowerRecord setUserAccountId(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>idf_onboarding.borrower.user_account_id</code>.
     */
    public Long getUserAccountId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>idf_onboarding.borrower.work_id</code>.
     */
    public BorrowerRecord setWorkId(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>idf_onboarding.borrower.work_id</code>.
     */
    public Long getWorkId() {
        return (Long) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, Long, Long, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, Long, Long, Long> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Borrower.BORROWER.ID;
    }

    @Override
    public Field<Long> field2() {
        return Borrower.BORROWER.PERSONAL_DATA_ID;
    }

    @Override
    public Field<Long> field3() {
        return Borrower.BORROWER.USER_ACCOUNT_ID;
    }

    @Override
    public Field<Long> field4() {
        return Borrower.BORROWER.WORK_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getPersonalDataId();
    }

    @Override
    public Long component3() {
        return getUserAccountId();
    }

    @Override
    public Long component4() {
        return getWorkId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getPersonalDataId();
    }

    @Override
    public Long value3() {
        return getUserAccountId();
    }

    @Override
    public Long value4() {
        return getWorkId();
    }

    @Override
    public BorrowerRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public BorrowerRecord value2(Long value) {
        setPersonalDataId(value);
        return this;
    }

    @Override
    public BorrowerRecord value3(Long value) {
        setUserAccountId(value);
        return this;
    }

    @Override
    public BorrowerRecord value4(Long value) {
        setWorkId(value);
        return this;
    }

    @Override
    public BorrowerRecord values(Long value1, Long value2, Long value3, Long value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BorrowerRecord
     */
    public BorrowerRecord() {
        super(Borrower.BORROWER);
    }

    /**
     * Create a detached, initialised BorrowerRecord
     */
    public BorrowerRecord(Long id, Long personalDataId, Long userAccountId, Long workId) {
        super(Borrower.BORROWER);

        set(0, id);
        set(1, personalDataId);
        set(2, userAccountId);
        set(3, workId);
    }

    private Long updatedBy;
    
    public Long getUpdatedBy() {
        return updatedBy;
    }
    
    public void setUpdatedBy(Long updatedBy) {
        this.updatedBy = updatedBy;
    }
}
