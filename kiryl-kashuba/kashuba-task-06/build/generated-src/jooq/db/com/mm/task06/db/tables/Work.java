/*
 * This file is generated by jOOQ.
 */
package com.mm.task06.db.tables;


import com.mm.db.jooq.datatype.EducationConverter;
import com.mm.platform.jooq.datatype.LocalDateTimeConverter;
import com.mm.task06.db.IdfOnboarding;
import com.mm.task06.db.Keys;
import com.mm.task06.db.tables.records.WorkRecord;
import com.mm.types.Education;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.13.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Work extends TableImpl<WorkRecord> {

    private static final long serialVersionUID = 1534518860;

    /**
     * The reference instance of <code>idf_onboarding.work</code>
     */
    public static final Work WORK = new Work();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WorkRecord> getRecordType() {
        return WorkRecord.class;
    }

    /**
     * The column <code>idf_onboarding.work.id</code>.
     */
    public final TableField<WorkRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>idf_onboarding.work.salary</code>.
     */
    public final TableField<WorkRecord, Double> SALARY = createField(DSL.name("salary"), org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>idf_onboarding.work.education</code>.
     */
    public final TableField<WorkRecord, Education> EDUCATION = createField(DSL.name("education"), org.jooq.impl.SQLDataType.VARCHAR(64), this, "", new EducationConverter());

    /**
     * The column <code>idf_onboarding.work.next_income_date</code>.
     */
    public final TableField<WorkRecord, LocalDateTime> NEXT_INCOME_DATE = createField(DSL.name("next_income_date"), org.jooq.impl.SQLDataType.TIMESTAMP, this, "", new LocalDateTimeConverter());

    /**
     * Create a <code>idf_onboarding.work</code> table reference
     */
    public Work() {
        this(DSL.name("work"), null);
    }

    /**
     * Create an aliased <code>idf_onboarding.work</code> table reference
     */
    public Work(String alias) {
        this(DSL.name(alias), WORK);
    }

    /**
     * Create an aliased <code>idf_onboarding.work</code> table reference
     */
    public Work(Name alias) {
        this(alias, WORK);
    }

    private Work(Name alias, Table<WorkRecord> aliased) {
        this(alias, aliased, null);
    }

    private Work(Name alias, Table<WorkRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> Work(Table<O> child, ForeignKey<O, WorkRecord> key) {
        super(child, key, WORK);
    }

    @Override
    public Schema getSchema() {
        return IdfOnboarding.IDF_ONBOARDING;
    }

    @Override
    public Identity<WorkRecord, Long> getIdentity() {
        return Keys.IDENTITY_WORK;
    }

    @Override
    public UniqueKey<WorkRecord> getPrimaryKey() {
        return Keys.KEY_WORK_PRIMARY;
    }

    @Override
    public List<UniqueKey<WorkRecord>> getKeys() {
        return Arrays.<UniqueKey<WorkRecord>>asList(Keys.KEY_WORK_PRIMARY);
    }

    @Override
    public Work as(String alias) {
        return new Work(DSL.name(alias), this);
    }

    @Override
    public Work as(Name alias) {
        return new Work(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Work rename(String name) {
        return new Work(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Work rename(Name name) {
        return new Work(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, Double, Education, LocalDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
