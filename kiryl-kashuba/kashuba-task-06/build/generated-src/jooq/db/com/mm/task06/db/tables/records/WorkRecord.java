/*
 * This file is generated by jOOQ.
 */
package com.mm.task06.db.tables.records;


import com.mm.task06.db.tables.Work;
import com.mm.types.Education;

import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.13.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WorkRecord extends UpdatableRecordImpl<WorkRecord> implements Record4<Long, Double, Education, LocalDateTime> {

    private static final long serialVersionUID = -959709890;

    /**
     * Setter for <code>idf_onboarding.work.id</code>.
     */
    public WorkRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>idf_onboarding.work.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>idf_onboarding.work.salary</code>.
     */
    public WorkRecord setSalary(Double value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>idf_onboarding.work.salary</code>.
     */
    public Double getSalary() {
        return (Double) get(1);
    }

    /**
     * Setter for <code>idf_onboarding.work.education</code>.
     */
    public WorkRecord setEducation(Education value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>idf_onboarding.work.education</code>.
     */
    public Education getEducation() {
        return (Education) get(2);
    }

    /**
     * Setter for <code>idf_onboarding.work.next_income_date</code>.
     */
    public WorkRecord setNextIncomeDate(LocalDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>idf_onboarding.work.next_income_date</code>.
     */
    public LocalDateTime getNextIncomeDate() {
        return (LocalDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, Double, Education, LocalDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, Double, Education, LocalDateTime> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Work.WORK.ID;
    }

    @Override
    public Field<Double> field2() {
        return Work.WORK.SALARY;
    }

    @Override
    public Field<Education> field3() {
        return Work.WORK.EDUCATION;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return Work.WORK.NEXT_INCOME_DATE;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Double component2() {
        return getSalary();
    }

    @Override
    public Education component3() {
        return getEducation();
    }

    @Override
    public LocalDateTime component4() {
        return getNextIncomeDate();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Double value2() {
        return getSalary();
    }

    @Override
    public Education value3() {
        return getEducation();
    }

    @Override
    public LocalDateTime value4() {
        return getNextIncomeDate();
    }

    @Override
    public WorkRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public WorkRecord value2(Double value) {
        setSalary(value);
        return this;
    }

    @Override
    public WorkRecord value3(Education value) {
        setEducation(value);
        return this;
    }

    @Override
    public WorkRecord value4(LocalDateTime value) {
        setNextIncomeDate(value);
        return this;
    }

    @Override
    public WorkRecord values(Long value1, Double value2, Education value3, LocalDateTime value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached WorkRecord
     */
    public WorkRecord() {
        super(Work.WORK);
    }

    /**
     * Create a detached, initialised WorkRecord
     */
    public WorkRecord(Long id, Double salary, Education education, LocalDateTime nextIncomeDate) {
        super(Work.WORK);

        set(0, id);
        set(1, salary);
        set(2, education);
        set(3, nextIncomeDate);
    }

    private Long updatedBy;
    
    public Long getUpdatedBy() {
        return updatedBy;
    }
    
    public void setUpdatedBy(Long updatedBy) {
        this.updatedBy = updatedBy;
    }
}
